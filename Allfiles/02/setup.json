{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "DeploymentID": {
        "type": "String"
      }
    },
    "variables": {
      "location": "[resourceGroup().location]",
      "defaultDataLakeStorageFilesystemName": "files",
      "computeSubnetId": "",
      "storageBlobDataOwnerRoleID": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
      "defaultDataLakeStorageAccountUrl": "[concat('https://', variables('dataLakeAccountName'), '.dfs.core.windows.net')]",
      "workspaceName": "[concat('workspace',parameters('DeploymentID'))]",
      "dataLakeAccountName": "[concat('datalake',parameters('DeploymentID'))]",
      "sparkPoolName": "[concat('spool',parameters('DeploymentID'))]",
      "sparkAutoScaleEnabled": "true",
      "sparkMinNodeCount": "3",
      "sparkMaxNodeCount": "4",
      "sparkNodeCount": "0",
      "sparkNodeSizeFamily": "MemoryOptimized",
      "sparkNodeSize": "Small",
      "sparkAutoPauseEnabled": "true",
      "sparkAutoPauseDelayInMinutes": "15",
      "sparkVersion": "3.1"
    },
    "resources": [
      {
        "type": "Microsoft.Resources/tags",
        "name": "default",
        "apiVersion": "2019-10-01",
        "dependsOn": [],
        "properties": {
            "tags": {
                "DeploymentId": "[variables('workspaceName')]"
            }
        }
    },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('dataLakeAccountName')]",
        "location": "[variables('location')]",
        "dependsOn": [],
        "tags": {},
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {
          "accessTier": "Hot",
          "supportsHttpsTrafficOnly": "true",
          "isHnsEnabled": "true",
          "largeFileSharesState": "Disabled"
        },
        "resources": [
          {
            "type": "blobServices/containers",
            "apiVersion": "2018-07-01",
            "name": "[concat('default/', variables('defaultDataLakeStorageFilesystemName'))]",
            "dependsOn": [
              "[concat('Microsoft.Storage/storageAccounts/', variables('dataLakeAccountName'))]"
            ]
          }
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices",
        "apiVersion": "2019-06-01",
        "name": "[concat(variables('dataLakeAccountName'), '/default')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName'))]"
        ],
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        },
        "properties": {
          "cors": {
            "corsRules": []
          },
          "deleteRetentionPolicy": {
            "enabled": false
          }
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts/fileServices",
        "apiVersion": "2019-06-01",
        "name": "[concat(variables('dataLakeAccountName'), '/default')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('dataLakeAccountName'))]"
        ],
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        },
        "properties": {
          "cors": {
            "corsRules": []
          }
        }
      },
      {
        "type": "Microsoft.Synapse/workspaces",
        "apiVersion": "2019-06-01-preview",
        "name": "[variables('workspaceName')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', variables('dataLakeAccountName'), '/blobServices/default/containers/', variables('defaultDataLakeStorageFilesystemName'))]"
        ],
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "defaultDataLakeStorage": {
            "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
            "filesystem": "[variables('defaultDataLakeStorageFilesystemName')]"
          },
          "virtualNetworkProfile": {
            "computeSubnetId": "[variables('computeSubnetId')]"
          },
          "sqlAdministratorLogin": "adminuser",
          "sqlAdministratorLoginPassword": "Password.1!!"
        },
        "resources": [
          {
            "type": "firewallrules",
            "apiVersion": "2019-06-01-preview",
            "name": "allowAll",
            "location": "[variables('location')]",
            "dependsOn": [
              "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
            ],
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "255.255.255.255"
            }
          }
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
        "apiVersion": "2018-09-01-preview",
        "name": "[concat(variables('dataLakeAccountName'), '/default/', variables('defaultDataLakeStorageFilesystemName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataOwnerRoleID'), '/', variables('workspaceName'))))]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
        ],
        "properties": {
          "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataOwnerRoleID'))]",
          "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
          "principalType": "ServicePrincipal"
        }
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2018-09-01-preview",
        "name": "[guid(concat(resourceGroup().id, '/', variables('storageBlobDataOwnerRoleID'), '/', variables('workspaceName'), '2'))]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
        ],
        "properties": {
          "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataOwnerRoleID'))]",
          "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
          "principalType": "ServicePrincipal"
        }
      },
      {
        "type": "Microsoft.Synapse/workspaces/bigDataPools",
        "apiVersion": "2019-06-01-preview",
        "name": "[concat(variables('workspaceName'), '/', variables('sparkPoolName'))]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
        ],
        "properties": {
          "nodeCount": "[variables('sparkNodeCount')]",
          "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
          "nodeSize": "[variables('sparkNodeSize')]",
          "autoScale": {
            "enabled": "[variables('sparkAutoScaleEnabled')]",
            "minNodeCount": "[variables('sparkMinNodeCount')]",
            "maxNodeCount": "[variables('sparkMaxNodeCount')]"
          },
          "autoPause": {
            "enabled": "[variables('sparkAutoPauseEnabled')]",
            "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
          },
          "sparkVersion": "[variables('sparkVersion')]"
        }
      }
    ],
    "outputs": {
      "workspaceid": {
      "type": "string",
      "value":"[reference(resourceId('Microsoft.Synapse/workspaces', variables('workspaceName'))).workspaceUID]"
      }
    }
  }
  
